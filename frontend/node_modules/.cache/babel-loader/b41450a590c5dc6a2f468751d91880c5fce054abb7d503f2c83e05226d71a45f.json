{"ast":null,"code":"var _jsxFileName = \"/Users/Parth/Laredo Car accident/laredo-car-accident/frontend/src/components/forms/PatientModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport styled from 'styled-components';\nimport { useMultiStepForm } from '../../hooks/useMultiStepForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalOverlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: var(--z-modal);\n  padding: var(--space-lg);\n`;\n_c = ModalOverlay;\nconst ModalContent = styled(motion.div)`\n  background: var(--color-white);\n  border-radius: var(--radius-xl);\n  box-shadow: var(--shadow-xl);\n  width: 100%;\n  max-width: 600px;\n  max-height: 90vh;\n  overflow-y: auto;\n  position: relative;\n`;\n_c2 = ModalContent;\nconst ModalHeader = styled.div`\n  padding: var(--space-2xl);\n  border-bottom: 1px solid var(--color-gray-200);\n  position: sticky;\n  top: 0;\n  background: var(--color-white);\n  border-radius: var(--radius-xl) var(--radius-xl) 0 0;\n  z-index: 1;\n\n  h2 {\n    font-size: var(--font-size-2xl);\n    color: var(--color-primary-blue-dark);\n    margin: 0 0 var(--space-sm) 0;\n\n    @media (max-width: 768px) {\n      font-size: var(--font-size-xl);\n    }\n  }\n\n  p {\n    color: var(--color-gray-700);\n    margin: 0;\n    font-size: var(--font-size-base);\n  }\n`;\n_c3 = ModalHeader;\nconst CloseButton = styled.button`\n  position: absolute;\n  top: var(--space-lg);\n  right: var(--space-lg);\n  background: none;\n  border: none;\n  font-size: var(--font-size-2xl);\n  color: var(--color-gray-500);\n  cursor: pointer;\n  padding: var(--space-sm);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n\n  &:hover {\n    background: var(--color-gray-100);\n    color: var(--color-gray-700);\n  }\n\n  &:focus {\n    outline: 2px solid var(--color-focus);\n    outline-offset: 2px;\n  }\n`;\n_c4 = CloseButton;\nconst ProgressBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: var(--space-xl);\n  padding: 0 var(--space-lg);\n`;\n_c5 = ProgressBar;\nconst ProgressStep = styled.div`\n  display: flex;\n  align-items: center;\n  gap: var(--space-sm);\n  flex: 1;\n  position: relative;\n\n  &:not(:last-child)::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    right: calc(-50% + 16px);\n    left: calc(50% + 16px);\n    height: 2px;\n    background: ${props => props.completed ? 'var(--color-accent-green)' : 'var(--color-gray-300)'};\n    transform: translateY(-50%);\n    z-index: 0;\n  }\n\n  .step-circle {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: var(--font-weight-bold);\n    font-size: var(--font-size-sm);\n    position: relative;\n    z-index: 1;\n    background: ${props => props.completed ? 'var(--color-accent-green)' : props.active ? 'var(--color-primary-blue)' : 'var(--color-gray-300)'};\n    color: var(--color-white);\n  }\n\n  .step-label {\n    font-size: var(--font-size-sm);\n    font-weight: var(--font-weight-medium);\n    color: ${props => props.active ? 'var(--color-primary-blue)' : props.completed ? 'var(--color-accent-green)' : 'var(--color-gray-500)'};\n\n    @media (max-width: 768px) {\n      display: none;\n    }\n  }\n`;\n_c6 = ProgressStep;\nconst ModalBody = styled.div`\n  padding: var(--space-2xl);\n`;\n_c7 = ModalBody;\nconst FormSection = styled.div`\n  .form-title {\n    font-size: var(--font-size-xl);\n    color: var(--color-primary-blue-dark);\n    margin-bottom: var(--space-lg);\n    text-align: center;\n\n    @media (max-width: 768px) {\n      font-size: var(--font-size-lg);\n    }\n  }\n`;\n_c8 = FormSection;\nconst FormGrid = styled.div`\n  display: grid;\n  gap: var(--space-lg);\n\n  &.two-column {\n    grid-template-columns: 1fr 1fr;\n    \n    @media (max-width: 768px) {\n      grid-template-columns: 1fr;\n    }\n  }\n`;\n_c9 = FormGrid;\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: var(--space-sm);\n\n  label {\n    font-size: var(--font-size-base);\n    font-weight: var(--font-weight-semibold);\n    color: var(--color-gray-800);\n\n    .required {\n      color: var(--color-accent-orange);\n      margin-left: var(--space-xs);\n    }\n  }\n\n  input, select, textarea {\n    padding: var(--space-md);\n    border: 2px solid var(--color-gray-300);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-base);\n    transition: border-color var(--transition-fast);\n\n    &:focus {\n      outline: none;\n      border-color: var(--color-primary-blue);\n      box-shadow: 0 0 0 3px rgba(44, 90, 160, 0.1);\n    }\n\n    &.error {\n      border-color: var(--color-accent-orange);\n    }\n  }\n\n  textarea {\n    min-height: 100px;\n    resize: vertical;\n  }\n\n  .error-message {\n    color: var(--color-accent-orange);\n    font-size: var(--font-size-sm);\n    margin-top: var(--space-xs);\n  }\n`;\n_c0 = FormGroup;\nconst RadioGroup = styled.div`\n  display: flex;\n  gap: var(--space-lg);\n  flex-wrap: wrap;\n\n  label {\n    display: flex;\n    align-items: center;\n    gap: var(--space-sm);\n    cursor: pointer;\n    font-weight: var(--font-weight-normal);\n\n    input[type=\"radio\"] {\n      width: auto;\n      margin: 0;\n    }\n  }\n`;\n_c1 = RadioGroup;\nconst CheckboxGroup = styled.div`\n  display: grid;\n  gap: var(--space-sm);\n\n  label {\n    display: flex;\n    align-items: flex-start;\n    gap: var(--space-sm);\n    cursor: pointer;\n    font-weight: var(--font-weight-normal);\n    line-height: var(--line-height-normal);\n\n    input[type=\"checkbox\"] {\n      width: auto;\n      margin: 0;\n      margin-top: 2px;\n    }\n  }\n`;\n_c10 = CheckboxGroup;\nconst ModalFooter = styled.div`\n  padding: var(--space-xl) var(--space-2xl);\n  border-top: 1px solid var(--color-gray-200);\n  display: flex;\n  justify-content: space-between;\n  gap: var(--space-md);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n_c11 = ModalFooter;\nconst Button = styled.button`\n  padding: var(--space-md) var(--space-xl);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  font-weight: var(--font-weight-semibold);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  border: 2px solid;\n\n  ${props => {\n  switch (props.variant) {\n    case 'primary':\n      return `\n          background: var(--color-primary-blue);\n          color: var(--color-white);\n          border-color: var(--color-primary-blue);\n          \n          &:hover:not(:disabled) {\n            background: var(--color-primary-blue-dark);\n            border-color: var(--color-primary-blue-dark);\n          }\n        `;\n    case 'danger':\n      return `\n          background: var(--color-accent-orange);\n          color: var(--color-white);\n          border-color: var(--color-accent-orange);\n          \n          &:hover:not(:disabled) {\n            background: #e55a2b;\n            border-color: #e55a2b;\n          }\n        `;\n    default:\n      return `\n          background: var(--color-white);\n          color: var(--color-primary-blue);\n          border-color: var(--color-primary-blue);\n          \n          &:hover:not(:disabled) {\n            background: var(--color-primary-blue-light);\n          }\n        `;\n  }\n}}\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  &:focus {\n    outline: 2px solid var(--color-focus);\n    outline-offset: 2px;\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n_c12 = Button;\nconst PatientModal = ({\n  onClose\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    currentStep,\n    nextStep,\n    previousStep,\n    isFirstStep,\n    isLastStep\n  } = useMultiStepForm(3);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    phone: '',\n    email: '',\n    preferredLanguage: 'english',\n    accidentDate: '',\n    accidentTime: '',\n    location: '',\n    circumstances: '',\n    vehicleInfo: '',\n    damageDescription: '',\n    policeReport: '',\n    insurance: '',\n    painLocation: [],\n    symptoms: '',\n    medicalHistory: '',\n    treatmentPreferences: '',\n    hasAttorney: 'no',\n    attorneyName: '',\n    attorneyPhone: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    const handleEscape = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    document.addEventListener('keydown', handleEscape);\n    document.body.style.overflow = 'hidden';\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'unset';\n    };\n  }, [onClose]);\n  const updateField = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    if (errors[field]) {\n      setErrors(prev => ({\n        ...prev,\n        [field]: ''\n      }));\n    }\n  };\n  const validateStep = () => {\n    const newErrors = {};\n    switch (currentStep) {\n      case 1:\n        if (!formData.firstName.trim()) newErrors.firstName = t('forms.validation.required');\n        if (!formData.lastName.trim()) newErrors.lastName = t('forms.validation.required');\n        if (!formData.phone.trim()) newErrors.phone = t('forms.validation.required');else if (!/^\\(\\d{3}\\) \\d{3}-\\d{4}$/.test(formData.phone)) newErrors.phone = t('forms.validation.invalidPhone');\n        if (formData.email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) newErrors.email = t('forms.validation.invalidEmail');\n        break;\n      case 2:\n        if (!formData.accidentDate) newErrors.accidentDate = t('forms.validation.required');\n        if (!formData.location.trim()) newErrors.location = t('forms.validation.required');\n        if (!formData.circumstances.trim()) newErrors.circumstances = t('forms.validation.required');\n        break;\n      case 3:\n        if (formData.painLocation.length === 0) newErrors.painLocation = t('forms.validation.required');\n        if (!formData.symptoms.trim()) newErrors.symptoms = t('forms.validation.required');\n        if (formData.hasAttorney === 'yes') {\n          if (!formData.attorneyName.trim()) newErrors.attorneyName = t('forms.validation.required');\n          if (!formData.attorneyPhone.trim()) newErrors.attorneyPhone = t('forms.validation.required');\n        }\n        break;\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleNext = () => {\n    if (validateStep()) {\n      nextStep();\n    }\n  };\n  const handleSubmit = async () => {\n    if (!validateStep()) return;\n    setIsSubmitting(true);\n    try {\n      // Simulate form submission\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // Here you would typically send the form data to your backend\n      console.log('Form submitted:', formData);\n\n      // Show success message and close modal\n      alert('Form submitted successfully! We will contact you within 24 hours.');\n      onClose();\n    } catch (error) {\n      alert('There was an error submitting the form. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handlePainLocationChange = (location, checked) => {\n    if (checked) {\n      updateField('painLocation', [...formData.painLocation, location]);\n    } else {\n      updateField('painLocation', formData.painLocation.filter(l => l !== location));\n    }\n  };\n  const formatPhoneNumber = value => {\n    const digits = value.replace(/\\D/g, '');\n    if (digits.length >= 6) {\n      return `(${digits.slice(0, 3)}) ${digits.slice(3, 6)}-${digits.slice(6, 10)}`;\n    } else if (digits.length >= 3) {\n      return `(${digits.slice(0, 3)}) ${digits.slice(3)}`;\n    }\n    return digits;\n  };\n  const steps = [{\n    number: 1,\n    label: 'Contact'\n  }, {\n    number: 2,\n    label: 'Accident'\n  }, {\n    number: 3,\n    label: 'Assessment'\n  }];\n  const renderStep = () => {\n    switch (currentStep) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(FormSection, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"form-title\",\n            children: t('forms.patient.step1.title')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            className: \"two-column\",\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                children: [t('forms.patient.step1.firstName'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"firstName\",\n                value: formData.firstName,\n                onChange: e => updateField('firstName', e.target.value),\n                className: errors.firstName ? 'error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 17\n              }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-message\",\n                children: errors.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                children: [t('forms.patient.step1.lastName'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"lastName\",\n                value: formData.lastName,\n                onChange: e => updateField('lastName', e.target.value),\n                className: errors.lastName ? 'error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 17\n              }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-message\",\n                children: errors.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"phone\",\n                children: [t('forms.patient.step1.phone'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                id: \"phone\",\n                value: formData.phone,\n                onChange: e => updateField('phone', formatPhoneNumber(e.target.value)),\n                placeholder: \"(956) 123-4567\",\n                className: errors.phone ? 'error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 17\n              }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-message\",\n                children: errors.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: t('forms.patient.step1.email')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                value: formData.email,\n                onChange: e => updateField('email', e.target.value),\n                className: errors.email ? 'error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 17\n              }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-message\",\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: t('forms.patient.step1.preferredLanguage')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"preferredLanguage\",\n                  value: \"english\",\n                  checked: formData.preferredLanguage === 'english',\n                  onChange: e => updateField('preferredLanguage', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 19\n                }, this), t('forms.patient.step1.languages.english')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"preferredLanguage\",\n                  value: \"spanish\",\n                  checked: formData.preferredLanguage === 'spanish',\n                  onChange: e => updateField('preferredLanguage', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 19\n                }, this), t('forms.patient.step1.languages.spanish')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"preferredLanguage\",\n                  value: \"both\",\n                  checked: formData.preferredLanguage === 'both',\n                  onChange: e => updateField('preferredLanguage', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 19\n                }, this), t('forms.patient.step1.languages.both')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(FormSection, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"form-title\",\n            children: t('forms.patient.step2.title')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            className: \"two-column\",\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"accidentDate\",\n                children: [t('forms.patient.step2.accidentDate'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"accidentDate\",\n                value: formData.accidentDate,\n                onChange: e => updateField('accidentDate', e.target.value),\n                className: errors.accidentDate ? 'error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 17\n              }, this), errors.accidentDate && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-message\",\n                children: errors.accidentDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"accidentTime\",\n                children: t('forms.patient.step2.accidentTime')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                id: \"accidentTime\",\n                value: formData.accidentTime,\n                onChange: e => updateField('accidentTime', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"location\",\n              children: [t('forms.patient.step2.location'), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"location\",\n              value: formData.location,\n              onChange: e => updateField('location', e.target.value),\n              placeholder: \"Street address, intersection, or landmark\",\n              className: errors.location ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 15\n            }, this), errors.location && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"circumstances\",\n              children: [t('forms.patient.step2.circumstances'), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"circumstances\",\n              value: formData.circumstances,\n              onChange: e => updateField('circumstances', e.target.value),\n              placeholder: \"Describe what happened...\",\n              className: errors.circumstances ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this), errors.circumstances && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.circumstances\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            className: \"two-column\",\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"vehicleInfo\",\n                children: t('forms.patient.step2.vehicleInfo')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"vehicleInfo\",\n                value: formData.vehicleInfo,\n                onChange: e => updateField('vehicleInfo', e.target.value),\n                placeholder: \"Year, Make, Model\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"policeReport\",\n                children: t('forms.patient.step2.policeReport')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"policeReport\",\n                value: formData.policeReport,\n                onChange: e => updateField('policeReport', e.target.value),\n                placeholder: \"Report number (if available)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"insurance\",\n              children: t('forms.patient.step2.insurance')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"insurance\",\n              value: formData.insurance,\n              onChange: e => updateField('insurance', e.target.value),\n              placeholder: \"Insurance company, policy number, claim number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(FormSection, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"form-title\",\n            children: t('forms.patient.step3.title')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [t('forms.patient.step3.painLocation'), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CheckboxGroup, {\n              children: ['Neck', 'Upper Back', 'Lower Back', 'Shoulders', 'Arms', 'Legs', 'Head', 'Chest', 'Other'].map(location => /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: formData.painLocation.includes(location),\n                  onChange: e => handlePainLocationChange(location, e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 21\n                }, this), location]\n              }, location, true, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 15\n            }, this), errors.painLocation && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.painLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"symptoms\",\n              children: [t('forms.patient.step3.symptoms'), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 724,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"symptoms\",\n              value: formData.symptoms,\n              onChange: e => updateField('symptoms', e.target.value),\n              placeholder: \"Describe your pain, stiffness, numbness, or other symptoms...\",\n              className: errors.symptoms ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 15\n            }, this), errors.symptoms && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.symptoms\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"medicalHistory\",\n              children: t('forms.patient.step3.medicalHistory')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"medicalHistory\",\n              value: formData.medicalHistory,\n              onChange: e => updateField('medicalHistory', e.target.value),\n              placeholder: \"Previous injuries, surgeries, current medications...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: t('forms.patient.step3.hasAttorney')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"hasAttorney\",\n                  value: \"no\",\n                  checked: formData.hasAttorney === 'no',\n                  onChange: e => updateField('hasAttorney', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 750,\n                  columnNumber: 19\n                }, this), \"No\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"hasAttorney\",\n                  value: \"yes\",\n                  checked: formData.hasAttorney === 'yes',\n                  onChange: e => updateField('hasAttorney', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 19\n                }, this), \"Yes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 13\n          }, this), formData.hasAttorney === 'yes' && /*#__PURE__*/_jsxDEV(FormGrid, {\n            className: \"two-column\",\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"attorneyName\",\n                children: [t('forms.patient.step3.attorneyName'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 777,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"attorneyName\",\n                value: formData.attorneyName,\n                onChange: e => updateField('attorneyName', e.target.value),\n                className: errors.attorneyName ? 'error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 19\n              }, this), errors.attorneyName && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-message\",\n                children: errors.attorneyName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"attorneyPhone\",\n                children: [t('forms.patient.step3.attorneyPhone'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 792,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                id: \"attorneyPhone\",\n                value: formData.attorneyPhone,\n                onChange: e => updateField('attorneyPhone', formatPhoneNumber(e.target.value)),\n                placeholder: \"(956) 123-4567\",\n                className: errors.attorneyPhone ? 'error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 19\n              }, this), errors.attorneyPhone && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-message\",\n                children: errors.attorneyPhone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      exit: {\n        opacity: 0\n      },\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        initial: {\n          opacity: 0,\n          scale: 0.95,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          scale: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          scale: 0.95,\n          y: 20\n        },\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: t('forms.patient.title')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: t('forms.patient.subtitle')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n            onClick: onClose,\n            \"aria-label\": \"Close modal\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n            children: steps.map(step => /*#__PURE__*/_jsxDEV(ProgressStep, {\n              active: currentStep === step.number,\n              completed: currentStep > step.number,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-circle\",\n                children: currentStep > step.number ? '✓' : step.number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-label\",\n                children: step.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 19\n              }, this)]\n            }, step.number, true, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 13\n          }, this), renderStep()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: !isFirstStep && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: previousStep,\n              children: t('forms.buttons.previous')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: 'var(--space-md)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              children: t('forms.buttons.cancel')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 15\n            }, this), isLastStep ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleSubmit,\n              disabled: isSubmitting,\n              children: isSubmitting ? 'Submitting...' : t('forms.buttons.submit')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleNext,\n              children: t('forms.buttons.next')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 815,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientModal, \"WTl7Zf7sTEJ8MnETHwFF0Bdc7gw=\", false, function () {\n  return [useTranslation, useMultiStepForm];\n});\n_c13 = PatientModal;\nexport default PatientModal;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"ModalOverlay\");\n$RefreshReg$(_c2, \"ModalContent\");\n$RefreshReg$(_c3, \"ModalHeader\");\n$RefreshReg$(_c4, \"CloseButton\");\n$RefreshReg$(_c5, \"ProgressBar\");\n$RefreshReg$(_c6, \"ProgressStep\");\n$RefreshReg$(_c7, \"ModalBody\");\n$RefreshReg$(_c8, \"FormSection\");\n$RefreshReg$(_c9, \"FormGrid\");\n$RefreshReg$(_c0, \"FormGroup\");\n$RefreshReg$(_c1, \"RadioGroup\");\n$RefreshReg$(_c10, \"CheckboxGroup\");\n$RefreshReg$(_c11, \"ModalFooter\");\n$RefreshReg$(_c12, \"Button\");\n$RefreshReg$(_c13, \"PatientModal\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","motion","AnimatePresence","styled","useMultiStepForm","jsxDEV","_jsxDEV","ModalOverlay","div","_c","ModalContent","_c2","ModalHeader","_c3","CloseButton","button","_c4","ProgressBar","_c5","ProgressStep","props","completed","active","_c6","ModalBody","_c7","FormSection","_c8","FormGrid","_c9","FormGroup","_c0","RadioGroup","_c1","CheckboxGroup","_c10","ModalFooter","_c11","Button","variant","_c12","PatientModal","onClose","_s","t","currentStep","nextStep","previousStep","isFirstStep","isLastStep","formData","setFormData","firstName","lastName","phone","email","preferredLanguage","accidentDate","accidentTime","location","circumstances","vehicleInfo","damageDescription","policeReport","insurance","painLocation","symptoms","medicalHistory","treatmentPreferences","hasAttorney","attorneyName","attorneyPhone","errors","setErrors","isSubmitting","setIsSubmitting","handleEscape","e","key","document","addEventListener","body","style","overflow","removeEventListener","updateField","field","value","prev","validateStep","newErrors","trim","test","length","Object","keys","handleNext","handleSubmit","Promise","resolve","setTimeout","console","log","alert","error","handlePainLocationChange","checked","filter","l","formatPhoneNumber","digits","replace","slice","steps","number","label","renderStep","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","target","placeholder","name","map","includes","initial","opacity","animate","exit","onClick","scale","y","stopPropagation","step","display","gap","disabled","_c13","$RefreshReg$"],"sources":["/Users/Parth/Laredo Car accident/laredo-car-accident/frontend/src/components/forms/PatientModal.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport styled from 'styled-components';\nimport { useMultiStepForm } from '../../hooks/useMultiStepForm';\n\nconst ModalOverlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: var(--z-modal);\n  padding: var(--space-lg);\n`;\n\nconst ModalContent = styled(motion.div)`\n  background: var(--color-white);\n  border-radius: var(--radius-xl);\n  box-shadow: var(--shadow-xl);\n  width: 100%;\n  max-width: 600px;\n  max-height: 90vh;\n  overflow-y: auto;\n  position: relative;\n`;\n\nconst ModalHeader = styled.div`\n  padding: var(--space-2xl);\n  border-bottom: 1px solid var(--color-gray-200);\n  position: sticky;\n  top: 0;\n  background: var(--color-white);\n  border-radius: var(--radius-xl) var(--radius-xl) 0 0;\n  z-index: 1;\n\n  h2 {\n    font-size: var(--font-size-2xl);\n    color: var(--color-primary-blue-dark);\n    margin: 0 0 var(--space-sm) 0;\n\n    @media (max-width: 768px) {\n      font-size: var(--font-size-xl);\n    }\n  }\n\n  p {\n    color: var(--color-gray-700);\n    margin: 0;\n    font-size: var(--font-size-base);\n  }\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: var(--space-lg);\n  right: var(--space-lg);\n  background: none;\n  border: none;\n  font-size: var(--font-size-2xl);\n  color: var(--color-gray-500);\n  cursor: pointer;\n  padding: var(--space-sm);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n\n  &:hover {\n    background: var(--color-gray-100);\n    color: var(--color-gray-700);\n  }\n\n  &:focus {\n    outline: 2px solid var(--color-focus);\n    outline-offset: 2px;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: var(--space-xl);\n  padding: 0 var(--space-lg);\n`;\n\nconst ProgressStep = styled.div<{ active: boolean; completed: boolean }>`\n  display: flex;\n  align-items: center;\n  gap: var(--space-sm);\n  flex: 1;\n  position: relative;\n\n  &:not(:last-child)::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    right: calc(-50% + 16px);\n    left: calc(50% + 16px);\n    height: 2px;\n    background: ${props => props.completed ? 'var(--color-accent-green)' : 'var(--color-gray-300)'};\n    transform: translateY(-50%);\n    z-index: 0;\n  }\n\n  .step-circle {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: var(--font-weight-bold);\n    font-size: var(--font-size-sm);\n    position: relative;\n    z-index: 1;\n    background: ${props => \n      props.completed ? 'var(--color-accent-green)' :\n      props.active ? 'var(--color-primary-blue)' : 'var(--color-gray-300)'\n    };\n    color: var(--color-white);\n  }\n\n  .step-label {\n    font-size: var(--font-size-sm);\n    font-weight: var(--font-weight-medium);\n    color: ${props => \n      props.active ? 'var(--color-primary-blue)' : \n      props.completed ? 'var(--color-accent-green)' : 'var(--color-gray-500)'\n    };\n\n    @media (max-width: 768px) {\n      display: none;\n    }\n  }\n`;\n\nconst ModalBody = styled.div`\n  padding: var(--space-2xl);\n`;\n\nconst FormSection = styled.div`\n  .form-title {\n    font-size: var(--font-size-xl);\n    color: var(--color-primary-blue-dark);\n    margin-bottom: var(--space-lg);\n    text-align: center;\n\n    @media (max-width: 768px) {\n      font-size: var(--font-size-lg);\n    }\n  }\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  gap: var(--space-lg);\n\n  &.two-column {\n    grid-template-columns: 1fr 1fr;\n    \n    @media (max-width: 768px) {\n      grid-template-columns: 1fr;\n    }\n  }\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: var(--space-sm);\n\n  label {\n    font-size: var(--font-size-base);\n    font-weight: var(--font-weight-semibold);\n    color: var(--color-gray-800);\n\n    .required {\n      color: var(--color-accent-orange);\n      margin-left: var(--space-xs);\n    }\n  }\n\n  input, select, textarea {\n    padding: var(--space-md);\n    border: 2px solid var(--color-gray-300);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-base);\n    transition: border-color var(--transition-fast);\n\n    &:focus {\n      outline: none;\n      border-color: var(--color-primary-blue);\n      box-shadow: 0 0 0 3px rgba(44, 90, 160, 0.1);\n    }\n\n    &.error {\n      border-color: var(--color-accent-orange);\n    }\n  }\n\n  textarea {\n    min-height: 100px;\n    resize: vertical;\n  }\n\n  .error-message {\n    color: var(--color-accent-orange);\n    font-size: var(--font-size-sm);\n    margin-top: var(--space-xs);\n  }\n`;\n\nconst RadioGroup = styled.div`\n  display: flex;\n  gap: var(--space-lg);\n  flex-wrap: wrap;\n\n  label {\n    display: flex;\n    align-items: center;\n    gap: var(--space-sm);\n    cursor: pointer;\n    font-weight: var(--font-weight-normal);\n\n    input[type=\"radio\"] {\n      width: auto;\n      margin: 0;\n    }\n  }\n`;\n\nconst CheckboxGroup = styled.div`\n  display: grid;\n  gap: var(--space-sm);\n\n  label {\n    display: flex;\n    align-items: flex-start;\n    gap: var(--space-sm);\n    cursor: pointer;\n    font-weight: var(--font-weight-normal);\n    line-height: var(--line-height-normal);\n\n    input[type=\"checkbox\"] {\n      width: auto;\n      margin: 0;\n      margin-top: 2px;\n    }\n  }\n`;\n\nconst ModalFooter = styled.div`\n  padding: var(--space-xl) var(--space-2xl);\n  border-top: 1px solid var(--color-gray-200);\n  display: flex;\n  justify-content: space-between;\n  gap: var(--space-md);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst Button = styled.button<{ variant?: 'primary' | 'secondary' | 'danger' }>`\n  padding: var(--space-md) var(--space-xl);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  font-weight: var(--font-weight-semibold);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  border: 2px solid;\n\n  ${props => {\n    switch (props.variant) {\n      case 'primary':\n        return `\n          background: var(--color-primary-blue);\n          color: var(--color-white);\n          border-color: var(--color-primary-blue);\n          \n          &:hover:not(:disabled) {\n            background: var(--color-primary-blue-dark);\n            border-color: var(--color-primary-blue-dark);\n          }\n        `;\n      case 'danger':\n        return `\n          background: var(--color-accent-orange);\n          color: var(--color-white);\n          border-color: var(--color-accent-orange);\n          \n          &:hover:not(:disabled) {\n            background: #e55a2b;\n            border-color: #e55a2b;\n          }\n        `;\n      default:\n        return `\n          background: var(--color-white);\n          color: var(--color-primary-blue);\n          border-color: var(--color-primary-blue);\n          \n          &:hover:not(:disabled) {\n            background: var(--color-primary-blue-light);\n          }\n        `;\n    }\n  }}\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  &:focus {\n    outline: 2px solid var(--color-focus);\n    outline-offset: 2px;\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\ninterface PatientModalProps {\n  onClose: () => void;\n}\n\ninterface FormData {\n  // Step 1: Contact Information\n  firstName: string;\n  lastName: string;\n  phone: string;\n  email: string;\n  preferredLanguage: string;\n  \n  // Step 2: Accident Details\n  accidentDate: string;\n  accidentTime: string;\n  location: string;\n  circumstances: string;\n  vehicleInfo: string;\n  damageDescription: string;\n  policeReport: string;\n  insurance: string;\n  \n  // Step 3: Injury Assessment\n  painLocation: string[];\n  symptoms: string;\n  medicalHistory: string;\n  treatmentPreferences: string;\n  hasAttorney: string;\n  attorneyName: string;\n  attorneyPhone: string;\n}\n\nconst PatientModal: React.FC<PatientModalProps> = ({ onClose }) => {\n  const { t } = useTranslation();\n  const { currentStep, nextStep, previousStep, isFirstStep, isLastStep } = useMultiStepForm(3);\n  \n  const [formData, setFormData] = useState<FormData>({\n    firstName: '',\n    lastName: '',\n    phone: '',\n    email: '',\n    preferredLanguage: 'english',\n    accidentDate: '',\n    accidentTime: '',\n    location: '',\n    circumstances: '',\n    vehicleInfo: '',\n    damageDescription: '',\n    policeReport: '',\n    insurance: '',\n    painLocation: [],\n    symptoms: '',\n    medicalHistory: '',\n    treatmentPreferences: '',\n    hasAttorney: 'no',\n    attorneyName: '',\n    attorneyPhone: ''\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscape);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'unset';\n    };\n  }, [onClose]);\n\n  const updateField = (field: keyof FormData, value: string | string[]) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  const validateStep = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    switch (currentStep) {\n      case 1:\n        if (!formData.firstName.trim()) newErrors.firstName = t('forms.validation.required');\n        if (!formData.lastName.trim()) newErrors.lastName = t('forms.validation.required');\n        if (!formData.phone.trim()) newErrors.phone = t('forms.validation.required');\n        else if (!/^\\(\\d{3}\\) \\d{3}-\\d{4}$/.test(formData.phone)) newErrors.phone = t('forms.validation.invalidPhone');\n        if (formData.email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) newErrors.email = t('forms.validation.invalidEmail');\n        break;\n      case 2:\n        if (!formData.accidentDate) newErrors.accidentDate = t('forms.validation.required');\n        if (!formData.location.trim()) newErrors.location = t('forms.validation.required');\n        if (!formData.circumstances.trim()) newErrors.circumstances = t('forms.validation.required');\n        break;\n      case 3:\n        if (formData.painLocation.length === 0) newErrors.painLocation = t('forms.validation.required');\n        if (!formData.symptoms.trim()) newErrors.symptoms = t('forms.validation.required');\n        if (formData.hasAttorney === 'yes') {\n          if (!formData.attorneyName.trim()) newErrors.attorneyName = t('forms.validation.required');\n          if (!formData.attorneyPhone.trim()) newErrors.attorneyPhone = t('forms.validation.required');\n        }\n        break;\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleNext = () => {\n    if (validateStep()) {\n      nextStep();\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!validateStep()) return;\n\n    setIsSubmitting(true);\n    try {\n      // Simulate form submission\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // Here you would typically send the form data to your backend\n      console.log('Form submitted:', formData);\n      \n      // Show success message and close modal\n      alert('Form submitted successfully! We will contact you within 24 hours.');\n      onClose();\n    } catch (error) {\n      alert('There was an error submitting the form. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handlePainLocationChange = (location: string, checked: boolean) => {\n    if (checked) {\n      updateField('painLocation', [...formData.painLocation, location]);\n    } else {\n      updateField('painLocation', formData.painLocation.filter(l => l !== location));\n    }\n  };\n\n  const formatPhoneNumber = (value: string) => {\n    const digits = value.replace(/\\D/g, '');\n    if (digits.length >= 6) {\n      return `(${digits.slice(0, 3)}) ${digits.slice(3, 6)}-${digits.slice(6, 10)}`;\n    } else if (digits.length >= 3) {\n      return `(${digits.slice(0, 3)}) ${digits.slice(3)}`;\n    }\n    return digits;\n  };\n\n  const steps = [\n    { number: 1, label: 'Contact' },\n    { number: 2, label: 'Accident' },\n    { number: 3, label: 'Assessment' }\n  ];\n\n  const renderStep = () => {\n    switch (currentStep) {\n      case 1:\n        return (\n          <FormSection>\n            <h3 className=\"form-title\">{t('forms.patient.step1.title')}</h3>\n            <FormGrid className=\"two-column\">\n              <FormGroup>\n                <label htmlFor=\"firstName\">\n                  {t('forms.patient.step1.firstName')}\n                  <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"firstName\"\n                  value={formData.firstName}\n                  onChange={(e) => updateField('firstName', e.target.value)}\n                  className={errors.firstName ? 'error' : ''}\n                />\n                {errors.firstName && <span className=\"error-message\">{errors.firstName}</span>}\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"lastName\">\n                  {t('forms.patient.step1.lastName')}\n                  <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"lastName\"\n                  value={formData.lastName}\n                  onChange={(e) => updateField('lastName', e.target.value)}\n                  className={errors.lastName ? 'error' : ''}\n                />\n                {errors.lastName && <span className=\"error-message\">{errors.lastName}</span>}\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"phone\">\n                  {t('forms.patient.step1.phone')}\n                  <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"tel\"\n                  id=\"phone\"\n                  value={formData.phone}\n                  onChange={(e) => updateField('phone', formatPhoneNumber(e.target.value))}\n                  placeholder=\"(956) 123-4567\"\n                  className={errors.phone ? 'error' : ''}\n                />\n                {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"email\">{t('forms.patient.step1.email')}</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  value={formData.email}\n                  onChange={(e) => updateField('email', e.target.value)}\n                  className={errors.email ? 'error' : ''}\n                />\n                {errors.email && <span className=\"error-message\">{errors.email}</span>}\n              </FormGroup>\n            </FormGrid>\n\n            <FormGroup>\n              <label>{t('forms.patient.step1.preferredLanguage')}</label>\n              <RadioGroup>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"preferredLanguage\"\n                    value=\"english\"\n                    checked={formData.preferredLanguage === 'english'}\n                    onChange={(e) => updateField('preferredLanguage', e.target.value)}\n                  />\n                  {t('forms.patient.step1.languages.english')}\n                </label>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"preferredLanguage\"\n                    value=\"spanish\"\n                    checked={formData.preferredLanguage === 'spanish'}\n                    onChange={(e) => updateField('preferredLanguage', e.target.value)}\n                  />\n                  {t('forms.patient.step1.languages.spanish')}\n                </label>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"preferredLanguage\"\n                    value=\"both\"\n                    checked={formData.preferredLanguage === 'both'}\n                    onChange={(e) => updateField('preferredLanguage', e.target.value)}\n                  />\n                  {t('forms.patient.step1.languages.both')}\n                </label>\n              </RadioGroup>\n            </FormGroup>\n          </FormSection>\n        );\n\n      case 2:\n        return (\n          <FormSection>\n            <h3 className=\"form-title\">{t('forms.patient.step2.title')}</h3>\n            <FormGrid className=\"two-column\">\n              <FormGroup>\n                <label htmlFor=\"accidentDate\">\n                  {t('forms.patient.step2.accidentDate')}\n                  <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"date\"\n                  id=\"accidentDate\"\n                  value={formData.accidentDate}\n                  onChange={(e) => updateField('accidentDate', e.target.value)}\n                  className={errors.accidentDate ? 'error' : ''}\n                />\n                {errors.accidentDate && <span className=\"error-message\">{errors.accidentDate}</span>}\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"accidentTime\">{t('forms.patient.step2.accidentTime')}</label>\n                <input\n                  type=\"time\"\n                  id=\"accidentTime\"\n                  value={formData.accidentTime}\n                  onChange={(e) => updateField('accidentTime', e.target.value)}\n                />\n              </FormGroup>\n            </FormGrid>\n\n            <FormGroup>\n              <label htmlFor=\"location\">\n                {t('forms.patient.step2.location')}\n                <span className=\"required\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                id=\"location\"\n                value={formData.location}\n                onChange={(e) => updateField('location', e.target.value)}\n                placeholder=\"Street address, intersection, or landmark\"\n                className={errors.location ? 'error' : ''}\n              />\n              {errors.location && <span className=\"error-message\">{errors.location}</span>}\n            </FormGroup>\n\n            <FormGroup>\n              <label htmlFor=\"circumstances\">\n                {t('forms.patient.step2.circumstances')}\n                <span className=\"required\">*</span>\n              </label>\n              <textarea\n                id=\"circumstances\"\n                value={formData.circumstances}\n                onChange={(e) => updateField('circumstances', e.target.value)}\n                placeholder=\"Describe what happened...\"\n                className={errors.circumstances ? 'error' : ''}\n              />\n              {errors.circumstances && <span className=\"error-message\">{errors.circumstances}</span>}\n            </FormGroup>\n\n            <FormGrid className=\"two-column\">\n              <FormGroup>\n                <label htmlFor=\"vehicleInfo\">{t('forms.patient.step2.vehicleInfo')}</label>\n                <input\n                  type=\"text\"\n                  id=\"vehicleInfo\"\n                  value={formData.vehicleInfo}\n                  onChange={(e) => updateField('vehicleInfo', e.target.value)}\n                  placeholder=\"Year, Make, Model\"\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <label htmlFor=\"policeReport\">{t('forms.patient.step2.policeReport')}</label>\n                <input\n                  type=\"text\"\n                  id=\"policeReport\"\n                  value={formData.policeReport}\n                  onChange={(e) => updateField('policeReport', e.target.value)}\n                  placeholder=\"Report number (if available)\"\n                />\n              </FormGroup>\n            </FormGrid>\n\n            <FormGroup>\n              <label htmlFor=\"insurance\">{t('forms.patient.step2.insurance')}</label>\n              <textarea\n                id=\"insurance\"\n                value={formData.insurance}\n                onChange={(e) => updateField('insurance', e.target.value)}\n                placeholder=\"Insurance company, policy number, claim number\"\n              />\n            </FormGroup>\n          </FormSection>\n        );\n\n      case 3:\n        return (\n          <FormSection>\n            <h3 className=\"form-title\">{t('forms.patient.step3.title')}</h3>\n            \n            <FormGroup>\n              <label>\n                {t('forms.patient.step3.painLocation')}\n                <span className=\"required\">*</span>\n              </label>\n              <CheckboxGroup>\n                {['Neck', 'Upper Back', 'Lower Back', 'Shoulders', 'Arms', 'Legs', 'Head', 'Chest', 'Other'].map((location) => (\n                  <label key={location}>\n                    <input\n                      type=\"checkbox\"\n                      checked={formData.painLocation.includes(location)}\n                      onChange={(e) => handlePainLocationChange(location, e.target.checked)}\n                    />\n                    {location}\n                  </label>\n                ))}\n              </CheckboxGroup>\n              {errors.painLocation && <span className=\"error-message\">{errors.painLocation}</span>}\n            </FormGroup>\n\n            <FormGroup>\n              <label htmlFor=\"symptoms\">\n                {t('forms.patient.step3.symptoms')}\n                <span className=\"required\">*</span>\n              </label>\n              <textarea\n                id=\"symptoms\"\n                value={formData.symptoms}\n                onChange={(e) => updateField('symptoms', e.target.value)}\n                placeholder=\"Describe your pain, stiffness, numbness, or other symptoms...\"\n                className={errors.symptoms ? 'error' : ''}\n              />\n              {errors.symptoms && <span className=\"error-message\">{errors.symptoms}</span>}\n            </FormGroup>\n\n            <FormGroup>\n              <label htmlFor=\"medicalHistory\">{t('forms.patient.step3.medicalHistory')}</label>\n              <textarea\n                id=\"medicalHistory\"\n                value={formData.medicalHistory}\n                onChange={(e) => updateField('medicalHistory', e.target.value)}\n                placeholder=\"Previous injuries, surgeries, current medications...\"\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>{t('forms.patient.step3.hasAttorney')}</label>\n              <RadioGroup>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"hasAttorney\"\n                    value=\"no\"\n                    checked={formData.hasAttorney === 'no'}\n                    onChange={(e) => updateField('hasAttorney', e.target.value)}\n                  />\n                  No\n                </label>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"hasAttorney\"\n                    value=\"yes\"\n                    checked={formData.hasAttorney === 'yes'}\n                    onChange={(e) => updateField('hasAttorney', e.target.value)}\n                  />\n                  Yes\n                </label>\n              </RadioGroup>\n            </FormGroup>\n\n            {formData.hasAttorney === 'yes' && (\n              <FormGrid className=\"two-column\">\n                <FormGroup>\n                  <label htmlFor=\"attorneyName\">\n                    {t('forms.patient.step3.attorneyName')}\n                    <span className=\"required\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"attorneyName\"\n                    value={formData.attorneyName}\n                    onChange={(e) => updateField('attorneyName', e.target.value)}\n                    className={errors.attorneyName ? 'error' : ''}\n                  />\n                  {errors.attorneyName && <span className=\"error-message\">{errors.attorneyName}</span>}\n                </FormGroup>\n\n                <FormGroup>\n                  <label htmlFor=\"attorneyPhone\">\n                    {t('forms.patient.step3.attorneyPhone')}\n                    <span className=\"required\">*</span>\n                  </label>\n                  <input\n                    type=\"tel\"\n                    id=\"attorneyPhone\"\n                    value={formData.attorneyPhone}\n                    onChange={(e) => updateField('attorneyPhone', formatPhoneNumber(e.target.value))}\n                    placeholder=\"(956) 123-4567\"\n                    className={errors.attorneyPhone ? 'error' : ''}\n                  />\n                  {errors.attorneyPhone && <span className=\"error-message\">{errors.attorneyPhone}</span>}\n                </FormGroup>\n              </FormGrid>\n            )}\n          </FormSection>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <AnimatePresence>\n      <ModalOverlay\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        onClick={onClose}\n      >\n        <ModalContent\n          initial={{ opacity: 0, scale: 0.95, y: 20 }}\n          animate={{ opacity: 1, scale: 1, y: 0 }}\n          exit={{ opacity: 0, scale: 0.95, y: 20 }}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <ModalHeader>\n            <h2>{t('forms.patient.title')}</h2>\n            <p>{t('forms.patient.subtitle')}</p>\n            <CloseButton onClick={onClose} aria-label=\"Close modal\">\n              ×\n            </CloseButton>\n          </ModalHeader>\n\n          <ModalBody>\n            <ProgressBar>\n              {steps.map((step) => (\n                <ProgressStep\n                  key={step.number}\n                  active={currentStep === step.number}\n                  completed={currentStep > step.number}\n                >\n                  <div className=\"step-circle\">\n                    {currentStep > step.number ? '✓' : step.number}\n                  </div>\n                  <div className=\"step-label\">{step.label}</div>\n                </ProgressStep>\n              ))}\n            </ProgressBar>\n\n            {renderStep()}\n          </ModalBody>\n\n          <ModalFooter>\n            <div>\n              {!isFirstStep && (\n                <Button variant=\"secondary\" onClick={previousStep}>\n                  {t('forms.buttons.previous')}\n                </Button>\n              )}\n            </div>\n            <div style={{ display: 'flex', gap: 'var(--space-md)' }}>\n              <Button onClick={onClose}>\n                {t('forms.buttons.cancel')}\n              </Button>\n              {isLastStep ? (\n                <Button \n                  variant=\"primary\" \n                  onClick={handleSubmit}\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? 'Submitting...' : t('forms.buttons.submit')}\n                </Button>\n              ) : (\n                <Button variant=\"primary\" onClick={handleNext}>\n                  {t('forms.buttons.next')}\n                </Button>\n              )}\n            </div>\n          </ModalFooter>\n        </ModalContent>\n      </ModalOverlay>\n    </AnimatePresence>\n  );\n};\n\nexport default PatientModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AACvD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,gBAAgB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,YAAY,GAAGJ,MAAM,CAACF,MAAM,CAACO,GAAG,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAZIF,YAAY;AAclB,MAAMG,YAAY,GAAGP,MAAM,CAACF,MAAM,CAACO,GAAG,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GATID,YAAY;AAWlB,MAAME,WAAW,GAAGT,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAxBID,WAAW;AA0BjB,MAAME,WAAW,GAAGX,MAAM,CAACY,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAtBIF,WAAW;AAwBjB,MAAMG,WAAW,GAAGd,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GALID,WAAW;AAOjB,MAAME,YAAY,GAAGhB,MAAM,CAACK,GAA4C;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBY,KAAK,IAAIA,KAAK,CAACC,SAAS,GAAG,2BAA2B,GAAG,uBAAuB;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBD,KAAK,IACjBA,KAAK,CAACC,SAAS,GAAG,2BAA2B,GAC7CD,KAAK,CAACE,MAAM,GAAG,2BAA2B,GAAG,uBAAuB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,aACaF,KAAK,IACZA,KAAK,CAACE,MAAM,GAAG,2BAA2B,GAC1CF,KAAK,CAACC,SAAS,GAAG,2BAA2B,GAAG,uBAAuB;AAC7E;AACA;AACA;AACA;AACA;AACA,CACC;AAACE,GAAA,GAjDIJ,YAAY;AAmDlB,MAAMK,SAAS,GAAGrB,MAAM,CAACK,GAAG;AAC5B;AACA,CAAC;AAACiB,GAAA,GAFID,SAAS;AAIf,MAAME,WAAW,GAAGvB,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACmB,GAAA,GAXID,WAAW;AAajB,MAAME,QAAQ,GAAGzB,MAAM,CAACK,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACqB,GAAA,GAXID,QAAQ;AAad,MAAME,SAAS,GAAG3B,MAAM,CAACK,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACuB,GAAA,GA5CID,SAAS;AA8Cf,MAAME,UAAU,GAAG7B,MAAM,CAACK,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyB,GAAA,GAjBID,UAAU;AAmBhB,MAAME,aAAa,GAAG/B,MAAM,CAACK,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC2B,IAAA,GAlBID,aAAa;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}