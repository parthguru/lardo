{"ast":null,"code":"const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS,\n      getFID,\n      getFCP,\n      getLCP,\n      getTTFB\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\n// Enhanced performance monitoring for production\nexport const logWebVitals = () => {\n  reportWebVitals(metric => {\n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`${metric.name}: ${metric.value} (${metric.rating})`);\n    }\n\n    // Send to analytics in production\n    if (process.env.NODE_ENV === 'production') {\n      // You can send metrics to your analytics service here\n      // Example: analytics.track('Web Vitals', metric);\n\n      // Log critical performance issues\n      if (metric.rating === 'poor') {\n        console.warn(`Poor ${metric.name}: ${metric.value}`);\n      }\n    }\n  });\n};\nexport default reportWebVitals;","map":{"version":3,"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","logWebVitals","metric","process","env","NODE_ENV","console","log","name","value","rating","warn"],"sources":["/Users/Parth/Laredo Car accident/laredo-car-accident/frontend/src/reportWebVitals.ts"],"sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\n// Enhanced performance monitoring for production\nexport const logWebVitals = () => {\n  reportWebVitals((metric) => {\n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`${metric.name}: ${metric.value} (${metric.rating})`);\n    }\n    \n    // Send to analytics in production\n    if (process.env.NODE_ENV === 'production') {\n      // You can send metrics to your analytics service here\n      // Example: analytics.track('Web Vitals', metric);\n      \n      // Log critical performance issues\n      if (metric.rating === 'poor') {\n        console.warn(`Poor ${metric.name}: ${metric.value}`);\n      }\n    }\n  });\n};\n\nexport default reportWebVitals;\n"],"mappings":"AAEA,MAAMA,eAAe,GAAIC,WAA2B,IAAK;EACvD,IAAIA,WAAW,IAAIA,WAAW,YAAYC,QAAQ,EAAE;IAClD,MAAM,CAAC,YAAY,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEC,MAAM;MAAEC,MAAM;MAAEC,MAAM;MAAEC,MAAM;MAAEC;IAAQ,CAAC,KAAK;MACzEJ,MAAM,CAACH,WAAW,CAAC;MACnBI,MAAM,CAACJ,WAAW,CAAC;MACnBK,MAAM,CAACL,WAAW,CAAC;MACnBM,MAAM,CAACN,WAAW,CAAC;MACnBO,OAAO,CAACP,WAAW,CAAC;IACtB,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,YAAY,GAAGA,CAAA,KAAM;EAChCT,eAAe,CAAEU,MAAM,IAAK;IAC1B;IACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;MAC1CC,OAAO,CAACC,GAAG,CAAC,GAAGL,MAAM,CAACM,IAAI,KAAKN,MAAM,CAACO,KAAK,KAAKP,MAAM,CAACQ,MAAM,GAAG,CAAC;IACnE;;IAEA;IACA,IAAIP,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC;MACA;;MAEA;MACA,IAAIH,MAAM,CAACQ,MAAM,KAAK,MAAM,EAAE;QAC5BJ,OAAO,CAACK,IAAI,CAAC,QAAQT,MAAM,CAACM,IAAI,KAAKN,MAAM,CAACO,KAAK,EAAE,CAAC;MACtD;IACF;EACF,CAAC,CAAC;AACJ,CAAC;AAED,eAAejB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}