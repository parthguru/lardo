{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport en from './en.json';\nimport es from './es.json';\nconst resources = {\n  en: {\n    translation: en\n  },\n  es: {\n    translation: es\n  }\n};\n\n// Detect user's preferred language\nconst detectLanguage = () => {\n  // Check localStorage first\n  const savedLanguage = localStorage.getItem('preferred-language');\n  if (savedLanguage && ['en', 'es'].includes(savedLanguage)) {\n    return savedLanguage;\n  }\n\n  // Check browser language\n  const browserLang = navigator.language.toLowerCase();\n  if (browserLang.startsWith('es')) {\n    return 'es';\n  }\n\n  // Default to English\n  return 'en';\n};\ni18n.use(initReactI18next).init({\n  resources,\n  lng: detectLanguage(),\n  fallbackLng: 'en',\n  interpolation: {\n    escapeValue: false // React already does escaping\n  },\n  // Performance optimizations\n  load: 'languageOnly',\n  preload: ['en', 'es'],\n  // Debugging (disable in production)\n  debug: process.env.NODE_ENV === 'development',\n  // React-specific options\n  react: {\n    useSuspense: false\n  }\n});\nexport default i18n;","map":{"version":3,"names":["i18n","initReactI18next","en","es","resources","translation","detectLanguage","savedLanguage","localStorage","getItem","includes","browserLang","navigator","language","toLowerCase","startsWith","use","init","lng","fallbackLng","interpolation","escapeValue","load","preload","debug","process","env","NODE_ENV","react","useSuspense"],"sources":["/Users/Parth/Laredo Car accident/laredo-car-accident/frontend/src/i18n/index.ts"],"sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport en from './en.json';\nimport es from './es.json';\n\nconst resources = {\n  en: {\n    translation: en,\n  },\n  es: {\n    translation: es,\n  },\n};\n\n// Detect user's preferred language\nconst detectLanguage = (): string => {\n  // Check localStorage first\n  const savedLanguage = localStorage.getItem('preferred-language');\n  if (savedLanguage && ['en', 'es'].includes(savedLanguage)) {\n    return savedLanguage;\n  }\n\n  // Check browser language\n  const browserLang = navigator.language.toLowerCase();\n  if (browserLang.startsWith('es')) {\n    return 'es';\n  }\n\n  // Default to English\n  return 'en';\n};\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources,\n    lng: detectLanguage(),\n    fallbackLng: 'en',\n    \n    interpolation: {\n      escapeValue: false, // React already does escaping\n    },\n\n    // Performance optimizations\n    load: 'languageOnly',\n    preload: ['en', 'es'],\n    \n    // Debugging (disable in production)\n    debug: process.env.NODE_ENV === 'development',\n\n    // React-specific options\n    react: {\n      useSuspense: false,\n    },\n  });\n\nexport default i18n;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAOC,EAAE,MAAM,WAAW;AAC1B,OAAOC,EAAE,MAAM,WAAW;AAE1B,MAAMC,SAAS,GAAG;EAChBF,EAAE,EAAE;IACFG,WAAW,EAAEH;EACf,CAAC;EACDC,EAAE,EAAE;IACFE,WAAW,EAAEF;EACf;AACF,CAAC;;AAED;AACA,MAAMG,cAAc,GAAGA,CAAA,KAAc;EACnC;EACA,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;EAChE,IAAIF,aAAa,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAACG,QAAQ,CAACH,aAAa,CAAC,EAAE;IACzD,OAAOA,aAAa;EACtB;;EAEA;EACA,MAAMI,WAAW,GAAGC,SAAS,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC;EACpD,IAAIH,WAAW,CAACI,UAAU,CAAC,IAAI,CAAC,EAAE;IAChC,OAAO,IAAI;EACb;;EAEA;EACA,OAAO,IAAI;AACb,CAAC;AAEDf,IAAI,CACDgB,GAAG,CAACf,gBAAgB,CAAC,CACrBgB,IAAI,CAAC;EACJb,SAAS;EACTc,GAAG,EAAEZ,cAAc,CAAC,CAAC;EACrBa,WAAW,EAAE,IAAI;EAEjBC,aAAa,EAAE;IACbC,WAAW,EAAE,KAAK,CAAE;EACtB,CAAC;EAED;EACAC,IAAI,EAAE,cAAc;EACpBC,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EAErB;EACAC,KAAK,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa;EAE7C;EACAC,KAAK,EAAE;IACLC,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEJ,eAAe7B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}